// Jenkinsfile

pipeline {
    agent any

    environment {
        // Ensure 'AWS-ROOT' is the correct ID for your AWS credentials in Jenkins.
        // These credentials should have permissions to create EC2 instances, security groups, etc.
        AWS_ACCESS_KEY_ID = credentials('AWS-ROOT')
        AWS_SECRET_ACCESS_KEY = credentials('AWS-ROOT')
    }

    stages {
        stage('Clone Repository') {
            steps {
                // Ensure this URL is correct for your Git repository.
                // The 'main' branch is specified here. Adjust if your primary branch is different (e.g., 'master').
                git branch: 'main', url: 'https://github.com/mubeen-hub78/Ansible-Challenge.git'
            }
        }

        stage('Terraform Init') {
            steps {
                // Navigate into the 'terraform' directory where your .tf files are located.
                dir('terraform') {
                    sh 'terraform init' // Initializes a Terraform working directory.
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                dir('terraform') {
                    // Applies the Terraform configuration to deploy the VMs.
                    // '-auto-approve' bypasses the interactive approval prompt.
                    sh 'terraform apply -auto-approve'
                }
            }
        }

        stage('Generate Ansible Inventory') {
            steps {
                dir('terraform') {
                    // Uses 'terraform output' to get the dynamic inventory string
                    // and redirects it into 'ansible/inventory.ini'.
                    // This creates the inventory file needed by Ansible.
                    sh 'terraform output -raw inventory > ../ansible/inventory.ini'
                }
            }
        }

        stage('Run Ansible Playbook') {
            steps {
                // Navigate into the 'ansible' directory where your playbook.yml and inventory.ini are.
                dir('ansible') {
                    // The 'sshagent' step makes your SSH private key available to Ansible.
                    // 'ubuntu' should be the ID of your SSH Username with Private Key credential in Jenkins.
                    sshagent (credentials: ['ubuntu']) {
                        sh '''
                        # Executes the main Ansible playbook.
                        # '-i inventory.ini' specifies the inventory file generated by Terraform.
                        # '--ssh-extra-args="-o StrictHostKeyChecking=no"' disables host key checking,
                        # which is common in CI/CD for newly provisioned dynamic hosts.
                        # WARNING: For production, consider using known_hosts or host key verification.
                        ansible-playbook -i inventory.ini playbook.yml --ssh-extra-args="-o StrictHostKeyChecking=no"
                        '''
                    }
                }
            }
        }
    }
}
