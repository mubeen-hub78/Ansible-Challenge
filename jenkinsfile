pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID = credentials('AWS-ROOT')
        AWS_SECRET_ACCESS_KEY = credentials('AWS-ROOT')
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/mubeen-hub78/Ansible-Challenge.git'
            }
        }

        stage('Terraform Init') {
            steps {
                dir('terraform') {
                    sh 'terraform init'
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                dir('terraform') {
                    sh 'terraform apply -auto-approve'
                }
            }
        }

        stage('Generate Ansible Inventory') {
            steps {
                dir('terraform') {
                    sh 'terraform output -raw inventory > ../ansible/inventory.ini'
                }
            }
        }

        stage('Run Ansible Playbook') {
            steps {
                dir('ansible') {
                    sshagent (credentials: ['Ubuntu']) { // Ensure this is the correct ID for your SSH key credential
                        sh '''
                        # First, run ONLY the Python bootstrapping play on RedHat hosts
                        ansible-playbook -i inventory.ini playbook.yml \\
                                         --limit redhat_hosts \\
                                         --tags "python_bootstrap" \\
                                         --ssh-extra-args="-o StrictHostKeyChecking=no"

                        # Now, run the rest of the playbook on all hosts.
                        # Ansible will now correctly pick up Python 3.8 on c8.local
                        # and Python 3.12 on u21.local (via /usr/bin/python3)
                        ansible-playbook -i inventory.ini playbook.yml \\
                                         --skip-tags "python_bootstrap" \\
                                         --ssh-extra-args="-o StrictHostKeyChecking=no"
                        '''
                    }
                }
            }
        }
    }
}
