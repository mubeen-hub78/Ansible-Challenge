---
# ansible/playbook.yml - Main Ansible Playbook for CI/CD Challenge

# Play 1: Python Bootstrapping for RedHat-like systems (Amazon Linux 2)
- name: Python Bootstrapping for RedHat-like systems
  hosts: redhat_hosts
  become: true
  gather_facts: false

  tasks:
    - name: Install Python 3.8 on RedHat (c8.local) via amazon-linux-extras
      raw: |
        echo "Starting Python 3.8 installation on RedHat-like system (Amazon Linux 2 specific)..."
        if ! command -v /usr/bin/python3.8 &> /dev/null || [ "$(/usr/bin/python3.8 -c 'import sys; print(sys.version_info[1])' 2>/dev/null || echo 0)" -lt 8 ]; then
          echo "Python 3.8 not found or too old, installing via amazon-linux-extras..."
          sudo yum update -y || echo "Yum update failed, but continuing for Python install."
          sudo amazon-linux-extras install -y python3.8
          echo "amazon-linux-extras install output: $?"
        else
          echo "Python 3.8 already present and sufficient."
        fi

        echo "Verifying /usr/bin/python3.8 path:"
        if [ -f /usr/bin/python3.8 ]; then
            echo "/usr/bin/python3.8 exists. All good."
        else
            echo "ERROR: /usr/bin/python3.8 was not found after installation attempt. This is critical. Exiting raw task with error."
            exit 1
        fi
      register: python_install_result
      failed_when: "python_install_result.rc != 0 or 'ERROR: /usr/bin/python3.8 was not found' in python_install_result.stdout"

    - name: Debug RedHat Python install output
      debug:
        var: python_install_result.stdout_lines
      when: python_install_result is defined

    # ✅ SET FACT to update Python interpreter path
    - name: Set Python 3.8 as interpreter for RedHat hosts
      set_fact:
        ansible_python_interpreter: /usr/bin/python3.8

    # ✅ RESET SSH CONNECTION to apply the new interpreter
    - name: Reset SSH connection to apply new interpreter
      meta: reset_connection

# Play 2: Common OS Configuration for All VMs
- name: Common OS Configuration
  hosts: all
  become: true

  roles:
    - common

# Play 3: Configure Frontend Servers (Nginx)
- name: Configure Frontend
  hosts: frontend
  become: true

  roles:
    - frontend

# Play 4: Configure Backend Servers (Netdata)
- name: Configure Backend
  hosts: backend
  become: true

  roles:
    - backend
